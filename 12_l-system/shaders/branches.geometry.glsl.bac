#version 430 core
layout(lines) in;
layout(triangle_strip, max_vertices = 18) out;


in float out_level[];

uniform mat4 u_modelMat;
uniform mat4 u_viewMat;
uniform mat4 u_projMat;

uniform float u_initialThickness = 0.1;
uniform float u_shrinkageFactor = 0.8;

void main()
{
	mat4 pvm = u_projMat * u_viewMat * u_modelMat;
	vec3 start = gl_in[0].gl_Position.xyz;
	vec3 end = gl_in[1].gl_Position.xyz;

	float startRadius = u_initialThickness * pow(u_shrinkageFactor, out_level[0]);
	float endRadius =  u_initialThickness * pow(u_shrinkageFactor, out_level[1]);
	vec3 direction = normalize(end - start);
	vec3 up = vec3(0.0, 1.0, 0.0);
	if (abs(direction.y) > 0.99) {
		up = vec3(1.0, 0.0, 0.0);
	}
	vec3 right = normalize(cross(direction, up));
	vec3 forward = normalize(cross(right, direction));

	vec4 startLeft = pvm * vec4(start - right * startRadius, 1.0);
	vec4 startRight = pvm * vec4(start + right * startRadius, 1.0);
	vec4 endLeft = pvm * vec4(end - right * endRadius, 1.0);
	vec4 endRight = pvm * vec4(end + right * endRadius, 1.0);

	vec4 startUp = pvm * vec4(start + forward * startRadius, 1.0);
	vec4 startDown = pvm * vec4(start - forward * startRadius, 1.0);
	vec4 endUp = pvm * vec4(end + forward * endRadius, 1.0);
	vec4 endDown = pvm * vec4(end - forward * endRadius, 1.0);

	// Emit vertices for the 4-sided tube
	gl_Position = startLeft;
	EmitVertex();
	gl_Position = startDown;
	EmitVertex();

	gl_Position = endLeft;
	EmitVertex();
	gl_Position = endDown;
	EmitVertex();

	EndPrimitive();

	gl_Position = startDown;
	EmitVertex();
	gl_Position = startRight;
	EmitVertex();

	gl_Position = endDown;
	EmitVertex();
	gl_Position = endRight;
	EmitVertex();

	EndPrimitive();

	gl_Position = startUp;
	EmitVertex();
	gl_Position = startLeft;
	EmitVertex();

	gl_Position = endUp;
	EmitVertex();
	gl_Position = endLeft;
	EmitVertex();

	EndPrimitive();

	gl_Position = startRight;
	EmitVertex();
	gl_Position = startUp;
	EmitVertex();

	gl_Position = endRight;
	EmitVertex();
	gl_Position = endUp;
	EmitVertex();

	EndPrimitive();
}
